package com.fpt.idoctor.model;
// Generated Mar 8, 2018 8:26:25 PM by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.fpt.idoctor.bean.UserBean;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user")
public class User implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private Role role;
	private Specialty specialty;
	private String workAddress;
	private String username;
	private String password;
	private String fullname;
	private String phone;
	private Boolean gender;
	private String address;
	private String deviceId;
	private Location location;
	private String status;
	private Set<EmergencyCall> emergencycallsForToUserId = new HashSet<EmergencyCall>(
			0);

	private Set<EmergencyCall> emergencycallsForFromUserId = new HashSet<EmergencyCall>(
			0);
	private Set<Message> messagesForToUserId = new HashSet<Message>(0);

	private Set<Message> messagesForFromUserId = new HashSet<Message>(0);

	public User() {
	}

	public User(Long id) {
		this.id = id;
	}

	public User(Long id, Role role, Specialty specialty, String username,
			String password, String fullname, String phone, Boolean gender,
			String address, String workAddress) {
		super();
		this.id = id;
		this.role = role;
		this.specialty = specialty;
		this.username = username;
		this.password = password;
		this.fullname = fullname;
		this.phone = phone;
		this.gender = gender;
		this.address = address;
		this.workAddress = workAddress;
	}

	public User(Long id, Role role, Specialty specialty, String username,
			String password, String fullname, String phone, Boolean gender,
			String address, Set<EmergencyCall> emergencycallsForToUserId,
			Location location, Set<EmergencyCall> emergencycallsForFromUserId,
			Set<Message> messagesForToUserId, /* Set<Session> sessions, */
			Set<Message> messagesForFromUserId) {
		this.id = id;
		this.role = role;
		this.specialty = specialty;
		this.username = username;
		this.password = password;
		this.fullname = fullname;
		this.phone = phone;
		this.gender = gender;
		this.address = address;
		this.emergencycallsForToUserId = emergencycallsForToUserId;
		this.location = location;
		this.emergencycallsForFromUserId = emergencycallsForFromUserId;
		this.messagesForToUserId = messagesForToUserId;
		// this.sessions = sessions;
		this.messagesForFromUserId = messagesForFromUserId;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne
	@JoinColumn(name = "roleId")
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@ManyToOne
	@JoinColumn(name = "specialtyId")
	public Specialty getSpecialty() {
		return this.specialty;
	}

	public void setSpecialty(Specialty specialty) {
		this.specialty = specialty;
	}

	@Column(name = "username", length = 15)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "fullname", length = 100)
	public String getFullname() {
		return this.fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@Column(name = "phone", length = 15)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "gender")
	public Boolean getGender() {
		return this.gender;
	}

	public void setGender(Boolean gender) {
		this.gender = gender;
	}

	@Column(name = "address", length = 150)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@OneToMany(mappedBy = "toUser")
	public Set<EmergencyCall> getEmergencycallsForToUserId() {
		return this.emergencycallsForToUserId;
	}

	public void setEmergencycallsForToUserId(
			Set<EmergencyCall> emergencycallsForToUserId) {
		this.emergencycallsForToUserId = emergencycallsForToUserId;
	}

	@OneToOne
	@JoinColumn(name = "locationId")
	public Location getLocation() {
		return this.location;
	}

	public void setLocation(Location location) {
		this.location = location;
	}

	@OneToMany(mappedBy = "fromUser")
	public Set<EmergencyCall> getEmergencycallsForFromUserId() {
		return this.emergencycallsForFromUserId;
	}

	public void setEmergencycallsForFromUserId(
			Set<EmergencyCall> emergencycallsForFromUserId) {
		this.emergencycallsForFromUserId = emergencycallsForFromUserId;
	}

	@OneToMany(mappedBy = "toUser")
	public Set<Message> getMessagesForToUserId() {
		return this.messagesForToUserId;
	}

	public void setMessagesForToUserId(Set<Message> messagesForToUserId) {
		this.messagesForToUserId = messagesForToUserId;
	}

	// @OneToMany( mappedBy = "user")
	// public Set<Session> getSessions() {
	// return this.sessions;
	// }
	//
	// public void setSessions(Set<Session> sessions) {
	// this.sessions = sessions;
	// }

	@OneToMany(mappedBy = "fromUser")
	public Set<Message> getMessagesForFromUserId() {
		return this.messagesForFromUserId;
	}

	public void setMessagesForFromUserId(Set<Message> messagesForFromUserId) {
		this.messagesForFromUserId = messagesForFromUserId;
	}

	@Column(name = "deviceId", length = 500)
	public String getDeviceId() {
		return this.deviceId;
	}

	public void setDeviceId(String deviceId) {
		this.deviceId = deviceId;
	}
	@Column(name = "status", length = 15)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}
	@Column(name = "workAddress", length = 500)
	public String getWorkAddress() {
		return this.workAddress;
	}

	public void setWorkAddress(String workAddress) {
		this.workAddress = workAddress;
	}

	public UserBean convertToBean() {
		UserBean bean = new UserBean();
		bean.setId(id);
		bean.setAddress(address);
		bean.setDeviceId(deviceId);
		bean.setFullName(fullname);
		bean.setGender(gender);
		if (location != null) {
			bean.setLat(location.getLatitude());
			bean.setLng(location.getLongitude());
		}
		bean.setPhone(phone);
		bean.setRole(role.getCode());
		if (specialty != null)
			bean.setSpecialty(specialty.getName());
		bean.setUsername(username);
		bean.setStatus(status);
		bean.setWorkAddress(workAddress);
		return bean;
	}

}
