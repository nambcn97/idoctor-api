package com.fpt.idoctor.model;
// Generated Mar 8, 2018 8:26:25 PM by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user")
public class User implements java.io.Serializable {

	private int id;
	private Role role;
	private Specialty specialty;
	private String username;
	private String password;
	private String fullname;
	private String phone;
	private Boolean sex;
	private String address;
	private Set<EmergencyCall> emergencycallsForToUserId = new HashSet<EmergencyCall>(
			0);
	private Set<Location> locations = new HashSet<Location>(0);
	private Set<EmergencyCall> emergencycallsForFromUserId = new HashSet<EmergencyCall>(
			0);
	private Set<Message> messagesForToUserId = new HashSet<Message>(0);
	// private Set<Session> sessions = new HashSet<Session>(0);
	private Set<Message> messagesForFromUserId = new HashSet<Message>(0);

	public User() {
	}

	public User(int id) {
		this.id = id;
	}

	public User(int id, Role role, Specialty specialty, String username,
			String password, String fullname, String phone, Boolean sex,
			String address, Set<EmergencyCall> emergencycallsForToUserId,
			Set<Location> locations,
			Set<EmergencyCall> emergencycallsForFromUserId,
			Set<Message> messagesForToUserId, /* Set<Session> sessions, */
			Set<Message> messagesForFromUserId) {
		this.id = id;
		this.role = role;
		this.specialty = specialty;
		this.username = username;
		this.password = password;
		this.fullname = fullname;
		this.phone = phone;
		this.sex = sex;
		this.address = address;
		this.emergencycallsForToUserId = emergencycallsForToUserId;
		this.locations = locations;
		this.emergencycallsForFromUserId = emergencycallsForFromUserId;
		this.messagesForToUserId = messagesForToUserId;
		// this.sessions = sessions;
		this.messagesForFromUserId = messagesForFromUserId;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "roleId")
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "specialtyId")
	public Specialty getSpecialty() {
		return this.specialty;
	}

	public void setSpecialty(Specialty specialty) {
		this.specialty = specialty;
	}

	@Column(name = "username", length = 15)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "fullname", length = 100)
	public String getFullname() {
		return this.fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@Column(name = "phone", length = 15)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "sex")
	public Boolean getSex() {
		return this.sex;
	}

	public void setSex(Boolean sex) {
		this.sex = sex;
	}

	@Column(name = "address", length = 150)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "toUser")
	public Set<EmergencyCall> getEmergencycallsForToUserId() {
		return this.emergencycallsForToUserId;
	}

	public void setEmergencycallsForToUserId(
			Set<EmergencyCall> emergencycallsForToUserId) {
		this.emergencycallsForToUserId = emergencycallsForToUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Location> getLocations() {
		return this.locations;
	}

	public void setLocations(Set<Location> locations) {
		this.locations = locations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fromUser")
	public Set<EmergencyCall> getEmergencycallsForFromUserId() {
		return this.emergencycallsForFromUserId;
	}

	public void setEmergencycallsForFromUserId(
			Set<EmergencyCall> emergencycallsForFromUserId) {
		this.emergencycallsForFromUserId = emergencycallsForFromUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "toUser")
	public Set<Message> getMessagesForToUserId() {
		return this.messagesForToUserId;
	}

	public void setMessagesForToUserId(Set<Message> messagesForToUserId) {
		this.messagesForToUserId = messagesForToUserId;
	}

	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	// public Set<Session> getSessions() {
	// return this.sessions;
	// }
	//
	// public void setSessions(Set<Session> sessions) {
	// this.sessions = sessions;
	// }

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fromUser")
	public Set<Message> getMessagesForFromUserId() {
		return this.messagesForFromUserId;
	}

	public void setMessagesForFromUserId(Set<Message> messagesForFromUserId) {
		this.messagesForFromUserId = messagesForFromUserId;
	}

}
